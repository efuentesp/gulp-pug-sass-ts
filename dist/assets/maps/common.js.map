{"version":3,"sources":["common.ts"],"names":["console","log","REST_URL","DAY_NAMES","DAY_NAMES_MIN","MONTH_NAMES","DATE_FORMAT","ui_datepicker_settings","showOn","buttonImage","buttonImageOnly","buttonText","dayNames","dayNamesMin","monthNames","dateFormat","icons","header","activeHeader","ui_accordion_settings","collapsible","heightStyle","$","document","tooltip","fillJqGrid","grid_id","data","jqGrid","forEach","item","i","isSidebarOpened","click","removeClass","addClass","rest_findAll","resource","params","cb","api_params","param","url","ajax","contentType","dataType","success","result","rpc_findAll","http_findAll"],"mappings":"AAAAA,QAAQC,IAAI,aAEZ,IAAMC,SAAW,wBAOXC,UAAY,CAChB,UACA,QACA,SACA,YACA,SACA,UACA,UAGIC,cAAgB,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAE3DC,YAAc,CAClB,QACA,UACA,QACA,QACA,OACA,QACA,QACA,SACA,aACA,UACA,YACA,aAGIC,YAAc,WAEdC,uBAAyB,CAC7BC,OAAQ,SACRC,YAAa,8BACbC,iBAAiB,EACjBC,WAAY,GACZC,SAAUT,UACVU,YAAaT,cACbU,WAAYT,YACZU,WAAYT,aAIRU,MAAQ,CAAEC,OAAQ,eAAgBC,aAAc,iBAEhDC,sBAAwB,CAC5BC,aAAa,EACbJ,MAAOA,MACPK,YAAa,WAIfC,EAAEC,UAAUC,UAGZ,IAAMC,WAAa,SAACC,EAAiBC,GACnCL,EAAEI,GAASE,OAAO,iBAClBD,EAAKE,QAAQ,SAACC,EAAMC,GAAM,OAAAT,EAAEI,GAASE,OAAO,aAAcG,EAAI,EAAGD,MAI/DE,iBAAkB,EACtBV,EAAE,mBAAmBW,MAAM,WACrBD,iBACFV,EAAE,oBAAoBY,YAAY,WAClCZ,EAAE,mBAAmBY,YAAY,WACjCZ,EAAE,YAAYY,YAAY,mBAC1BZ,IAEAA,EAAE,oBAAoBa,SAAS,WAC/Bb,EAAE,mBAAmBa,SAAS,WAC9Bb,EAAE,YAAYa,SAAS,oBAEzBH,iBAAmBA,kBAIrB,IAAMI,aAAe,SAACC,EAAkBC,EAAaC,GACnD,IAAMC,EAAalB,EAAEmB,MAAMH,GACrBI,EAAMF,EACLtC,SAAQ,IAAImC,EAAQ,IAAIG,EACxBtC,SAAQ,IAAImC,EACnBrC,QAAQC,IAAIyC,GAEZpB,EAAEqB,KAAK,CACLD,IAAGA,EACHE,YAAa,mBACbC,SAAU,OACVC,QAAS,SAAAC,GAAU,OAAAR,EAAGQ,OAIpBC,YAAc,SAACX,EAAkBC,EAAaC,KAI9CU,aAAeb","file":"../pages/common.js","sourcesContent":["console.log(\"common.ts\");\r\n\r\nconst REST_URL = \"http://localhost:3000\";\r\n\r\ninterface UrlParams {\r\n  [key: string]: any\r\n}\r\n\r\n// Query UI DatePicker settings\r\nconst DAY_NAMES = [\r\n  \"Domingo\",\r\n  \"Lunes\",\r\n  \"Martes\",\r\n  \"Miércoles\",\r\n  \"Jueves\",\r\n  \"Viernes\",\r\n  \"Sábado\"\r\n];\r\n\r\nconst DAY_NAMES_MIN = [\"Dom\", \"Lun\", \"Mar\", \"Mie\", \"Jue\", \"Vie\", \"Sab\"];\r\n\r\nconst MONTH_NAMES = [\r\n  \"Enero\",\r\n  \"Febrero\",\r\n  \"Marzo\",\r\n  \"Abril\",\r\n  \"Mayo\",\r\n  \"Junio\",\r\n  \"Julio\",\r\n  \"Agosto\",\r\n  \"Septiembre\",\r\n  \"Octubre\",\r\n  \"Noviembre\",\r\n  \"Diciembre\"\r\n];\r\n\r\nconst DATE_FORMAT = \"dd-mm-yy\";\r\n\r\nconst ui_datepicker_settings = {\r\n  showOn: \"button\",\r\n  buttonImage: \"/assets/images/calendar.png\",\r\n  buttonImageOnly: true,\r\n  buttonText: \"\",\r\n  dayNames: DAY_NAMES,\r\n  dayNamesMin: DAY_NAMES_MIN,\r\n  monthNames: MONTH_NAMES,\r\n  dateFormat: DATE_FORMAT\r\n};\r\n\r\n// Query UI Accordion settings\r\nconst icons = { header: \"ui-icon-plus\", activeHeader: \"ui-icon-minus\" };\r\n\r\nconst ui_accordion_settings = {\r\n  collapsible: true,\r\n  icons: icons,\r\n  heightStyle: \"content\"\r\n};\r\n\r\n// Query UI Tooltip settings\r\n$(document).tooltip();\r\n\r\n// JqGrid functions\r\nconst fillJqGrid = (grid_id: string, data: any[]) => {\r\n  $(grid_id).jqGrid(\"clearGridData\");\r\n  data.forEach((item, i) => $(grid_id).jqGrid(\"addRowData\", i + 1, item));\r\n};\r\n\r\n// Sidebar\r\nlet isSidebarOpened = false;\r\n$(\".sidebar_button\").click(() => {\r\n  if (isSidebarOpened) {\r\n    $(\".sidebar_content\").removeClass(\"is_open\");\r\n    $(\".sidebar_button\").removeClass(\"is_open\");\r\n    $(\".content\").removeClass(\"is_sidebar_open\");\r\n    $\r\n  } else {\r\n    $(\".sidebar_content\").addClass(\"is_open\");\r\n    $(\".sidebar_button\").addClass(\"is_open\");\r\n    $(\".content\").addClass(\"is_sidebar_open\");\r\n  }\r\n  isSidebarOpened = !isSidebarOpened;\r\n});\r\n\r\n// REST APIs}\r\nconst rest_findAll = (resource: string, params: any, cb: Function) => {\r\n  const api_params = $.param(params);\r\n  const url = api_params\r\n    ? `${REST_URL}/${resource}?${api_params}`\r\n    : `${REST_URL}/${resource}`;\r\n  console.log(url);\r\n\r\n  $.ajax({\r\n    url,\r\n    contentType: \"application/json\",\r\n    dataType: \"json\",\r\n    success: result => cb(result)\r\n  });\r\n};\r\n\r\nconst rpc_findAll = (resource: string, params: any, cb: Function) => {\r\n  // TODO: Implementar versión con POST\r\n};\r\n\r\nconst http_findAll = rest_findAll;\r\n"]}