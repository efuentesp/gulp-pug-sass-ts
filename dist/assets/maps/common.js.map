{"version":3,"sources":["common.ts"],"names":[],"mappings":"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","file":"../pages/common.js","sourcesContent":["console.log(\"common.ts\");\n\nconst REST_URL = \"http://localhost:3000\";\n\ninterface UrlParams {\n  [key: string]: any\n}\n\n// Query UI DatePicker settings\nconst DAY_NAMES = [\n  \"Domingo\",\n  \"Lunes\",\n  \"Martes\",\n  \"Miércoles\",\n  \"Jueves\",\n  \"Viernes\",\n  \"Sábado\"\n];\n\nconst DAY_NAMES_MIN = [\"Dom\", \"Lun\", \"Mar\", \"Mie\", \"Jue\", \"Vie\", \"Sab\"];\n\nconst MONTH_NAMES = [\n  \"Enero\",\n  \"Febrero\",\n  \"Marzo\",\n  \"Abril\",\n  \"Mayo\",\n  \"Junio\",\n  \"Julio\",\n  \"Agosto\",\n  \"Septiembre\",\n  \"Octubre\",\n  \"Noviembre\",\n  \"Diciembre\"\n];\n\nconst DATE_FORMAT = \"dd-mm-yy\";\n\nconst ui_datepicker_settings = {\n  showOn: \"button\",\n  buttonImage: \"/assets/images/calendar.png\",\n  buttonImageOnly: true,\n  buttonText: \"\",\n  dayNames: DAY_NAMES,\n  dayNamesMin: DAY_NAMES_MIN,\n  monthNames: MONTH_NAMES,\n  dateFormat: DATE_FORMAT\n};\n\n// Query UI Accordion settings\nconst icons = { header: \"ui-icon-plus\", activeHeader: \"ui-icon-minus\" };\n\nconst ui_accordion_settings = {\n  collapsible: true,\n  icons: icons,\n  heightStyle: \"content\"\n};\n\n// Query UI Tooltip settings\n$(document).tooltip();\n\n// JqGrid functions\nconst fillJqGrid = (grid_id: string, data: any[]) => {\n  $(grid_id).jqGrid(\"clearGridData\");\n  data.forEach((item, i) => $(grid_id).jqGrid(\"addRowData\", i + 1, item));\n};\n\n// Sidebar\nlet isSidebarOpened = false;\n$(\".sidebar_button\").click(() => {\n  if (isSidebarOpened) {\n    $(\".sidebar_content\").removeClass(\"is_open\");\n    $(\".sidebar_button\").removeClass(\"is_open\");\n    $(\".content\").removeClass(\"is_sidebar_open\");\n    $\n  } else {\n    $(\".sidebar_content\").addClass(\"is_open\");\n    $(\".sidebar_button\").addClass(\"is_open\");\n    $(\".content\").addClass(\"is_sidebar_open\");\n  }\n  isSidebarOpened = !isSidebarOpened;\n});\n\n// REST APIs}\nconst rest_findAll = (resource: string, params: any, cb: Function) => {\n  const api_params = $.param(params);\n  const url = api_params\n    ? `${REST_URL}/${resource}?${api_params}`\n    : `${REST_URL}/${resource}`;\n  console.log(url);\n\n  $.ajax({\n    url,\n    contentType: \"application/json\",\n    dataType: \"json\",\n    success: result => cb(result)\n  });\n};\n\nconst rpc_findAll = (resource: string, params: any, cb: Function) => {\n  // TODO: Implementar versión con POST\n};\n\nconst http_findAll = rest_findAll;\n"]}